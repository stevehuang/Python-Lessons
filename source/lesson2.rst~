============
Lesson 2 - expressions, statements, and variables
============

One of the first things to learn in a programming language is the
syntax and grammar. These are the rules that defines how you write
your code and how your code is executed. We’ll focus on the “how you
write your code” topic for these lessons.

Lesson 2 covers expressions, statements, variables and writing and
executing python code.

----------
Expression
----------

An expression in a programming language is a combination of explicit
values, constants, variables, operators, and functions.

For example, a value can be a number or a string.::

 numbers - 4, 3.14
 string - “How are you?”

A variable can be like::

 x,y,z, 
 bigVariableName
 special_123

Operators can be like::

 +, -, *, /, *= 

And finally, functions can be like::

 HelloWorld()
 Factorial(5)

----------
Statements
----------

A statement is a composition of keywords and expressions.  A simple
statement comprises of a single logical line.

Here is are examples of an assignment statements::

 x = 5
 y = 10
 string = “Hello World”

Another useful statement is the print statement. The function outputs

Here are some examples::

  print(“Hello World”)
  
There are keywords in Python language to perform certain operations. They are listed here::

 and      assert   break    class    continue def      del      elif   
 else     except   exec     finally  for      from     global   if 
 import   in       is       lambda   not      or       pass     print 
 raise    return   try      while    yield

For more details about statements, you can go to this reference:
http://docs.python.org/2/reference/simple_stmts.html

**Compound Statements**

Compound statements contain (groups of) other statements. They affect
or control the execution of those other statements in some way. In
general, compound statements span multiple lines.

Here are some examples of compound statements. Don't worry about
trying to understand them. We'll go over them in other lessons.

If statement::

 x=10 
 if x > 5:
   print(“x is greater than 10”)

While statement::

 x = 0 
 while x < 10:
   x += 1 
   print(“x is “, x)

For statement::

 for x in range(10):
   print “x is “, x

Try statement::

 try: 
  x = 1/0 
 finally:
  return 42 

lthough simple
incarnations a whole compound statement may be contained in one line.

reference: http://docs.python.org/2/reference/compound_stmts.html

---------
Variables
---------

Earlier, we saw assignment statements, like ``x =5`` or ``string = “Hello World”``

A variable is the name that is left of assignment. The right-hand stide is the value.
Think of a variable as a placeholder, a bucket which can be used later. Like a math
equation, where you replace the variable with the assigned value. You
can change the variables value directly, like::

 x = 5
 x = x + 2
 print x

A variable can be named with any lettter, the special character "_" and every
number. You cannot start a variable name with a number though.

Variable numbers in Python are case-sensitive. This means a variable
name like ``variable_name`` is different than ``Variable_Name``.

Variables cannot be the same name as keywords in Python.

Example: Math with variables
Similar to math equations, you can use variables and assignments to compute. 

Some simple examples to try out:
  x = 10
  y = 20
  print x+y       
  print x*y
  print x*0
  print y*2
  print x/y 
what’s the answer? what happened?
  print x/0
what are the outputs? what happened in the last one?

  try the following?
  x+y*10
did you notice it follows the order of precedence? Python code follows the order of precedence like math. Let’s review the order:
http://docs.python.org/2/reference/expressions.html#operator-precedence

Python Code

Code is a series of statements that are executed in order. Python is an 
interpreted language, where the code is executed one line at a time. You can write code in a file and execute it.

Each set of instructions tell the computer exactly what to do.

demo. how-to

# - means comments. When the code is running, the comments are skipped and not executed. 





Exercises

1. Expression.  Try printing out some expressions
 open the command shell. type the statements:

  print “Hello World”
  print 3.14
  print x		(what happened here? why didn’t it work?)

2. assignment. try the following assignments

name = “John Doe”
print “My name is “, name
name2 = “Wendy Doe”
print “My name is”, name2
print “Their names are “ + name + “ and “ + name2
name = name2
print “My name changed to”, name

3. variables/assignments.
    x = 10
    y = 20
    x = y
    y = 12
   What is x?

4. go to http://www.codeskulptor.org/#examples-arithmetic_expressions.py

and follow the instructions and see what happens.

5. There are 5280 feet in a mile. Write a Python statement that calculates and prints the number of feet in 13 miles.

6. The perimeter of a rectangle is 2w+2h, where w and h are the lengths of its sides. Write a Python statement that calculates and prints the length in inches of the perimeter of a rectangle with sides of length 4 and 7 inches. (Try to use variables)

7. The distance between two points (x0,y0) and (x1,y1) is (x0−x1)2+(y0−y1)2. Write a Python statement that calculates and prints the distance between the points (2,2) and (5,6).

7a. Given the variables x0, y0, x1, and y1, write an assignment statement that defines a variable distance whose values is the distance between the points (x0,y0) and (x1,y1).

8. Heron's formula states the area of a triangle is
s(s−a)(s−b)(s−c) where a,b and c are the lengths of the sides of the triangle and s=12, (a+b+c) is the semi-perimeter of the triangle. 

Given the variables x0, y0, x1,y1, x2, and y2, write a Python program that computes a variable area whose value is the area of the triangle with vertices (x0,y0), (x1,y1) and (x2,y2). (Hint: our solution uses five assignment statements.)

More exercises:

